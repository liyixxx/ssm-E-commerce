package com.ego.search.service.impl;

import java.io.IOException;
import java.util.List;

import javax.annotation.Resource;

import org.apache.solr.client.solrj.SolrServerException;
import org.apache.solr.client.solrj.impl.CloudSolrClient;
import org.apache.solr.common.SolrInputDocument;
import org.springframework.stereotype.Service;

import com.alibaba.dubbo.config.annotation.Reference;
import com.ego.dubbo.service.TbItemCatDubboService;
import com.ego.dubbo.service.TbItemDescDubboService;
import com.ego.dubbo.service.TbItemDubboService;
import com.ego.pojo.TbItem;
import com.ego.pojo.TbItemCat;
import com.ego.pojo.TbItemDesc;
import com.ego.search.service.TbItemService;

@Service
public class TbItemServiceImpl implements TbItemService{

	@Reference
	private TbItemDubboService tbItemDubboServiceImpl ;
	
	@Reference
	private TbItemDescDubboService tbItemDescDubboServiceImpl ;
	
	@Reference
	private TbItemCatDubboService tbItemCatDubboServiceImpl ;
	
	@Resource
	private CloudSolrClient solrClient ;
	
	@Override
	public void init() throws Exception, IOException {
		List<TbItem> list = tbItemDubboServiceImpl.selAllByStatus((byte)1);
		for (TbItem item : list) {
			// 商品对应的类目信息
			TbItemCat itemCat = tbItemCatDubboServiceImpl.selById(item.getCid());
			// 商品对应的描述信息
			TbItemDesc itemDesc = tbItemDescDubboServiceImpl.selByItemId(item.getId());
			// Solr文档对象 开始初始化
			SolrInputDocument doc = new SolrInputDocument();
			
			doc.addField("id", item.getId());
			doc.addField("item_title", item.getTitle());
			doc.addField("item_sell_point", item.getSellPoint());
			doc.addField("item_price",item.getPrice() );
			doc.addField("item_image", item.getImage());
			doc.addField("item_category_name", itemCat.getName());
			doc.addField("item_desc", itemDesc.getItemDesc());
			
			solrClient.add(doc);
		}
		
		
	}

}
